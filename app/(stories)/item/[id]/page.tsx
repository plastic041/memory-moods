import { db, threadsTable } from "@/app/db/schema";
import { notFound } from "next/navigation";
import { headers } from "next/headers";
import { nanoid } from "nanoid";
import { sql } from "drizzle-orm";
import { Suspense } from "react";
import { ThreadView } from "@/components/thread";

const getThread = async (idParam: string) => {
  const id = `thread_${idParam}`;

  return (
    await db
      .select({
        id: threadsTable.id,
        name: threadsTable.name,
        category_id: threadsTable.category_id,
        created_at: threadsTable.created_at,
        updated_at: threadsTable.updated_at,
      })
      .from(threadsTable)
      .where(sql`${threadsTable.id} = ${id}`)
      .limit(1)
  )[0];
};

/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/r/0CgFbz6suAU
 */

export default async function ItemPage({
  params: { id: idParam },
}: {
  params: { id: string };
}) {
  const rid = headers().get("x-vercel-id") ?? nanoid();

  console.time(`fetch thread ${idParam} (req: ${rid})`);
  const thread = await getThread(idParam);
  console.timeEnd(`fetch thread ${idParam} (req: ${rid})`);

  if (!thread) {
    notFound();
  }

  const now = Date.now();

  return (
    <div className="px-3">
      <div className="mb-4 flex items-start">
        <div className="flex flex-col items-center mr-1 gap-y-1">
          <svg
            height="12"
            viewBox="0 0 32 16"
            width="12"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path d="m2 27 14-29 14 29z" fill="#999" />
          </svg>
        </div>
        <div className="flex-grow">
          {/* <Link
            prefetch={true}
            href={`/item/${thread.id.replace(/^story_/, "")}`}
            className="text-[#000000] hover:underline"
          >
            {thread.title}
          </Link> */}

          {/* {thread.domain && (
            <span className="text-xs ml-1 text-[#666] md:text-[#828282]">
              ({thread.domain})
            </span>
          )} */}

          <p className="text-xs text-[#666] md:text-[#828282]">
            <timeAgo now={now} date={thread.created_at} />
          </p>
        </div>
      </div>

      <Suspense fallback={null}>
        <ThreadView threadId={thread.id} />
      </Suspense>
    </div>
  );
}
